/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.devtools.mobileharness.api.model.lab;

import com.google.auto.value.AutoValue;

/** The data model containing all information of a device id. */
@AutoValue
public abstract class DeviceId {

  public static DeviceId of(String controlId, String uuid, boolean isUuidVolatile) {
    return new AutoValue_DeviceId(controlId, uuid, isUuidVolatile);
  }

  public static DeviceId of(String controlId, String uuid) {
    return of(controlId, uuid, /* isUuidVolatile= */ false);
  }

  /** The device control ID detected by detector. */
  public abstract String controlId();

  /** The device UUID generated by dispatcher. */
  public abstract String uuid();

  /**
   * Whether the uuid is volatile.
   *
   * <p>We assume the uuid of emulator device, usb port based device, ip:port based device is
   * volatile.
   */
  public abstract boolean isUuidVolatile();
}
