/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package stability.model;

import "src/devtools/common/metrics/stability/model/proto/error_id.proto";

option java_package = "com.google.devtools.common.metrics.stability.model.proto";
option java_outer_classname = "ExceptionProto";

// Proto representation of a Java Throwable.
message ExceptionDetail {
  // Required.
  ExceptionSummary summary = 1;
  // Optional.
  ExceptionDetail cause = 2;
  // Optional.
  repeated ExceptionDetail suppressed = 3;
}

// Summary of an exception without its cause and suppressed.
message ExceptionSummary {
  // Required.
  ErrorId error_id = 1;
  // Required.
  string message = 2;
  // Required.
  ExceptionClassType class_type = 3;
  // Required.
  StackTrace stack_trace = 4;
}

message ExceptionClassType {
  // Required.
  string class_name = 1;
}

message StackTrace {
  repeated StackTraceElement element = 1;
}

message StackTraceElement {
  string class_name = 1;
  string method_name = 2;
  string file_name = 3;
  int32 line_number = 4;
}

// Non-recursive version of ExceptionDetail for Spanner or any other use cases
// that doesn't allow recursive definition of proto. Note the suppressed errors
// are dropped
message FlattenedExceptionDetail {
  // Required. It does not contain stack traces.
  ExceptionSummary summary = 1;

  // The cause chain. They don't contain stack traces.
  repeated ExceptionSummary cause = 2;

  // Serialized stack trace which contains the cause & suppressed exception
  // info. Required for top level exception. Empty for cause/suppressed
  // exceptions.
  optional string complete_stack_trace = 3;

  // Stack track of the error names, which contains the error names of the
  // cause. Error names are joined with '|'. Such as:
  // "CLIENT_TR_ALLOC_ERROR|GRPC_ERROR|COMMAND_ERROR".
  optional string error_name_stack_trace = 4;

  // Stack track of the error codes, which contains the error codes of the
  // cause. Error names are joined with '|'. Such as "2354|1254|789".
  optional string error_code_stack_trace = 5;

  // SLO facing critical Error ID. Used for calculating the SLO of the current
  // tool/system. It is the same as the first non-(UNCLASSIFIED/UNDETERMINED)
  // Error ID from the summary to all causes in the cause chain, if any.
  // Otherwise it is the same as the summary's Error ID.
  optional stability.model.ErrorId critical_error_id = 6;

  // User facing critical Error Id. Check go/critical_error_id_calc for detail
  // algorithm.
  optional stability.model.ErrorId user_facing_critical_error_id = 7;
}
