/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package mobileharness.api.model;

option java_package = "com.google.devtools.mobileharness.api.model.proto";
option java_outer_classname = "Job";

// Job timeout setting.
message Timeout {
  // Max execution time of a job. By default, it is 1 hour.
  int64 job_timeout_ms = 1;
  // Max execution time of a single test. By default, it is 5 minutes.
  int64 test_timeout_ms = 2;
  // Timeout for starting the job and waiting for allocating the first device.
  // By default, it is 5 minutes.
  int64 start_timeout_ms = 3;
}

// Job retry setting.
message Retry {
  // The retry level of Mobile harness job.
  enum Level {
    // A test retries when the result is ERROR. Only the final result is sent to
    // Sponge. It can hide some ERROR caused by devices. This is the default
    // retry leve.
    ERROR = 0;
    // A test retries when the result is ERROR/FAIL. Only the final result is
    // sent to Sponge. It can hide some test flakes.
    FAIL = 1;
    // Deprecated. Use repeat_runs istead.
    // A test retries until the attempt number reach 'test_attempts'. All the
    // attempt results are sent to Sponge.
    ALL = 2 [deprecated = true];
  }

  // The maximum number of times a test could retry. Default attempt is 2.
  int32 test_attempts = 1;
  // The retry level of Mobile harness job. Tests retry condition depends on the
  // level. Default level is ERROR.
  Level retry_level = 2;
}

// Job repeat_runs setting. Refer to go/mh-rerun for more details.
message Repeat {
  optional int32 repeat_runs = 1;
}

// Job priority.
enum Priority {
  MIN = 0;
  LOW = 10;
  DEFAULT = 20;
  HIGH = 30;
  MAX = 40;
}

// This enum is used to indicate user want an INTERACTIVE priority when
// requesting a device
enum DeviceAllocationPriority {
  // default value which indicate we want to fall back on billing to decide
  // priority
  DEVICE_ALLOCATION_PRIORITY_DEFAULT = 0;

  // this value should be used by the user. When given this priority,
  // other priority logic will be override.
  DEVICE_ALLOCATION_PRIORITY_INTERACTIVE = 1;
}

enum AllocationExitStrategy {
  NORMAL = 0;  // Based on b/187070244 NORMAL is now behaver as no fail fast.
  FAIL_FAST_NO_MATCH = 1;
  FAIL_FAST_NO_IDLE = 2;
}

// Job settings.
message JobSetting {
  Timeout timeout = 1;    // Optional
  Retry retry = 2;        // Optional
  Priority priority = 3;  // Optional
}

message JobUser {
  string run_as = 1;       // Required
  string actual_user = 2;  // Required
}

message JobFile {
  string tag = 1;
  repeated string location = 2;
}

message DeviceRequirements {
  // At least one device requirement is required. Only add multiple device
  // selector when you need multiple devices for every tests in the job.
  repeated DeviceRequirement device_requirement = 1;

  // Optional. Specifies dimension keys that must be present and share a common
  // value across all devices being used in this job. Only used when multiple
  // devices are required.
  repeated string shared_dimension = 2;
}

message DeviceRequirement {
  string device_type = 1;  // Required

  // Optional: Decorators in reversed decorating order and in executing order,
  // which means the preRun() of a decorator in the front will be executed
  // BEFORE preRun() of other decorators.
  repeated string decorator = 2;

  map<string, string> dimensions = 3;  // Optional
}

message JobFeature {
  // Required.
  JobUser user = 1;

  // Required.
  string driver = 2;

  // Required.
  DeviceRequirements device_requirements = 4;

  // Optional, if value not set we will use DEFAULT as default
  DeviceAllocationPriority device_allocation_priority = 5;

  // Deprecated. Use JobFeature.device_requirements.device_requirement instead.
  repeated DeviceRequirement device_requirement = 3 [deprecated = true];
}

message JobLocator {
  string id = 1;  // Required
  string name = 2;
}
